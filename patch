diff --git a/manifests/init.pp b/manifests/init.pp
index e44ce44..1f5d649 100644
--- a/manifests/init.pp
+++ b/manifests/init.pp
@@ -88,9 +88,6 @@
 # [*purge_config_dir*]
 #   Purge config files no longer generated by Puppet
 #
-# [*reload_command*]
-#   Command to call when service refresh is needed
-#
 # [*restart_on_change*]
 #   Determines whether to restart consul agent on $config_hash changes.
 #   This will not affect reloads when service, check or watch configs change.
@@ -170,7 +167,6 @@ class consul (
   $pretty_config         = $::consul::params::pretty_config,
   $pretty_config_indent  = $::consul::params::pretty_config_indent,
   $purge_config_dir      = $::consul::params::purge_config_dir,
-  $reload_command        = $::consul::params::reload_command,
   $restart_on_change     = $::consul::params::restart_on_change,
   $service_enable        = $::consul::params::service_enable,
   $service_ensure        = $::consul::params::service_ensure,
@@ -222,18 +218,18 @@ class consul (
     warning('data_dir must be set to install consul web ui')
   }
 
-  if ($config_hash_real['ports'] and $config_hash_real['ports']['http']) {
-    $http_port = $config_hash_real['ports']['http']
+  if ($config_hash_real['ports'] and $config_hash_real['ports']['rpc']) {
+    $rpc_port = $config_hash_real['ports']['rpc']
   } else {
-    $http_port = 8500
+    $rpc_port = 8400
   }
 
-  if ($config_hash_real['addresses'] and $config_hash_real['addresses']['http']) {
-    $http_addr = $config_hash_real['addresses']['http']
+  if ($config_hash_real['addresses'] and $config_hash_real['addresses']['rpc']) {
+    $rpc_addr = $config_hash_real['addresses']['rpc']
   } elsif ($config_hash_real['client_addr']) {
-    $http_addr = $config_hash_real['client_addr']
+    $rpc_addr = $config_hash_real['client_addr']
   } else {
-    $http_addr = $::ipaddress_lo
+    $rpc_addr = $::ipaddress_lo
   }
 
   if $services {
diff --git a/manifests/params.pp b/manifests/params.pp
index c79c545..6ffecec 100644
--- a/manifests/params.pp
+++ b/manifests/params.pp
@@ -29,7 +29,6 @@ class consul::params {
   $pretty_config         = false
   $pretty_config_indent  = 4
   $purge_config_dir      = true
-  $reload_command        = ''
   $restart_on_change     = true
   $service_enable        = true
   $service_ensure        = 'running'
diff --git a/manifests/reload_service.pp b/manifests/reload_service.pp
index 8d4f280..f08cef5 100644
--- a/manifests/reload_service.pp
+++ b/manifests/reload_service.pp
@@ -13,21 +13,15 @@ class consul::reload_service {
 
     # Make sure we don't try to connect to 0.0.0.0, use 127.0.0.1 instead
     # This can happen if the consul agent RPC port is bound to 0.0.0.0
-    if $::consul::http_addr == '0.0.0.0' {
-      $http_addr = '127.0.0.1'
+    if $::consul::rpc_addr == '0.0.0.0' {
+      $rpc_addr = '127.0.0.1'
     } else {
-      $http_addr = $::consul::http_addr
-    }
-
-    if $::consul::reload_command == '' {
-      reload_command = "consul reload -http-addr=${http_addr}:${consul::http_port}"
-    } else {
-      reload_command = $::consul::reload_command
+      $rpc_addr = $::consul::rpc_addr
     }
 
     exec { 'reload consul service':
       path        => [$::consul::bin_dir,'/bin','/usr/bin'],
-      command     => $reload_command,
+      command     => "consul reload -rpc-addr=${rpc_addr}:${consul::rpc_port}",
       refreshonly => true,
       tries       => 3,
     }
diff --git a/spec/classes/init_spec.rb b/spec/classes/init_spec.rb
index f96504a..5e3cc12 100644
--- a/spec/classes/init_spec.rb
+++ b/spec/classes/init_spec.rb
@@ -398,7 +398,7 @@ describe 'consul' do
     }}
     it {
       should contain_exec('reload consul service').
-        with_command('consul reload -http-addr=127.0.0.1:8500')
+        with_command('consul reload -rpc-addr=127.0.0.1:8500')
     }
   end
 
@@ -418,7 +418,7 @@ describe 'consul' do
     }}
     it {
       should contain_exec('reload consul service').
-        with_command('consul reload -http-addr=consul.example.com:9999')
+        with_command('consul reload -rpc-addr=consul.example.com:9999')
     }
   end
 
@@ -433,7 +433,7 @@ describe 'consul' do
     }}
     it {
       should contain_exec('reload consul service').
-        with_command('consul reload -http-addr=192.168.34.56:8500')
+        with_command('consul reload -rpc-addr=192.168.34.56:8500')
     }
   end
 
@@ -520,7 +520,7 @@ describe 'consul' do
     it { should contain_class('consul').with_init_style('init') }
     it {
       should contain_file('/etc/init.d/consul').
-        with_content(/-http-addr=127.0.0.1:8500/)
+        with_content(/-rpc-addr=127.0.0.1:8500/)
     }
   end
 
@@ -539,7 +539,7 @@ describe 'consul' do
     it { should contain_class('consul').with_init_style('init') }
     it {
       should contain_file('/etc/init.d/consul').
-        with_content(/-http-addr=consul.example.com:9999/)
+        with_content(/-rpc-addr=consul.example.com:9999/)
     }
   end
 
@@ -553,7 +553,7 @@ describe 'consul' do
     it { should contain_class('consul').with_init_style('init') }
     it {
       should contain_file('/etc/init.d/consul').
-        with_content(/-http-addr=192.168.34.56:8500/)
+        with_content(/-rpc-addr=192.168.34.56:8500/)
     }
   end
 
@@ -567,7 +567,7 @@ describe 'consul' do
     it { should contain_class('consul').with_init_style('debian') }
     it {
       should contain_file('/etc/init.d/consul').
-        with_content(/-http-addr=127.0.0.1:8500/)
+        with_content(/-rpc-addr=127.0.0.1:8500/)
     }
   end
 
@@ -586,7 +586,7 @@ describe 'consul' do
     it { should contain_class('consul').with_init_style('debian') }
     it {
       should contain_file('/etc/init.d/consul').
-        with_content(/-http-addr=consul.example.com:9999/)
+        with_content(/-rpc-addr=consul.example.com:9999/)
     }
   end
 
@@ -600,7 +600,7 @@ describe 'consul' do
     it { should contain_class('consul').with_init_style('upstart') }
     it {
       should contain_file('/etc/init/consul.conf').
-        with_content(/-http-addr=127.0.0.1:8500/)
+        with_content(/-rpc-addr=127.0.0.1:8500/)
     }
   end
 
@@ -619,7 +619,7 @@ describe 'consul' do
     it { should contain_class('consul').with_init_style('upstart') }
     it {
       should contain_file('/etc/init/consul.conf').
-        with_content(/-http-addr=consul.example.com:9999/)
+        with_content(/-rpc-addr=consul.example.com:9999/)
     }
   end
 
diff --git a/templates/consul.debian.erb b/templates/consul.debian.erb
index 71d6793..3ff8a67 100644
--- a/templates/consul.debian.erb
+++ b/templates/consul.debian.erb
@@ -21,7 +21,7 @@ PIDFILE=/var/run/$NAME/$NAME.pid
 DAEMON_ARGS="agent -config-dir <%= scope.lookupvar('consul::config_dir') %> <%= scope.lookupvar('consul::extra_options') %>"
 USER=<%= scope.lookupvar('consul::user') %>
 SCRIPTNAME=/etc/init.d/$NAME
-HTTP_ADDR=-http-addr=<%= scope.lookupvar('consul::http_addr') %>:<%= scope.lookupvar('consul::http_port') %>
+RPC_ADDR=-rpc-addr=<%= scope.lookupvar('consul::rpc_addr') %>:<%= scope.lookupvar('consul::rpc_port') %>
 
 # Exit if the package is not installed
 [ -x "$DAEMON" ] || exit 0
@@ -66,7 +66,7 @@ do_start()
             sleep 1
             continue
         fi
-        if "$DAEMON" info ${HTTP_ADDR} >/dev/null; then
+        if "$DAEMON" info ${RPC_ADDR} >/dev/null; then
             return 0
         fi
     done
@@ -80,8 +80,8 @@ do_start()
 do_stop()
 {
     # If consul is not acting as a server, exit gracefully
-    if ("${DAEMON}" info ${HTTP_ADDR} 2>/dev/null | grep -q 'server = false' 2>/dev/null) ; then
-        "$DAEMON" leave ${HTTP_ADDR}
+    if ("${DAEMON}" info ${RPC_ADDR} 2>/dev/null | grep -q 'server = false' 2>/dev/null) ; then
+        "$DAEMON" leave ${RPC_ADDR}
     fi
     # Return
     #   0 if daemon has been stopped
diff --git a/templates/consul.init.erb b/templates/consul.init.erb
index e07f2db..8cd9f11 100644
--- a/templates/consul.init.erb
+++ b/templates/consul.init.erb
@@ -17,7 +17,7 @@ CONSUL=<%= scope.lookupvar('consul::bin_dir') %>/consul
 CONFIG=<%= scope.lookupvar('consul::config_dir') %>
 PID_FILE=/var/run/consul/consul.pid
 LOG_FILE=<%= scope.lookupvar('consul::log_file') %>
-HTTP_ADDR=-http-addr=<%= scope.lookupvar('consul::http_addr') %>:<%= scope.lookupvar('consul::http_port') %>
+RPC_ADDR=-rpc-addr=<%= scope.lookupvar('consul::rpc_addr') %>:<%= scope.lookupvar('consul::rpc_port') %>
 
 [ -e /etc/sysconfig/consul ] && . /etc/sysconfig/consul
 
@@ -70,7 +70,7 @@ stop() {
         # If consul is not acting as a server, exit gracefully
         # Use SIGINT to create a "leave" event, unless the user has explicitly
         # changed that behavior in the Consul config.
-        if ("${CONSUL}" info ${HTTP_ADDR} 2>/dev/null | grep -q 'server = false' 2>/dev/null) ; then
+        if ("${CONSUL}" info ${RPC_ADDR} 2>/dev/null | grep -q 'server = false' 2>/dev/null) ; then
             consul_pid=$(cat $PID_FILE)
             killproc $KILLPROC_OPT $CONSUL -INT
             retcode=$?
@@ -109,7 +109,7 @@ case "$1" in
         stop
         ;;
     status)
-        "$CONSUL" info ${HTTP_ADDR}
+        "$CONSUL" info ${RPC_ADDR}
         ;;
     restart)
         stop
diff --git a/templates/consul.upstart.erb b/templates/consul.upstart.erb
index 4b3532a..aff200f 100644
--- a/templates/consul.upstart.erb
+++ b/templates/consul.upstart.erb
@@ -11,7 +11,7 @@ env DEFAULTS=/etc/default/consul
 env RUNDIR=/var/run/consul
 env PID_FILE=/var/run/consul/consul.pid
 env LOG_FILE=<%= scope.lookupvar('consul::log_file') %>
-env HTTP_ADDR=-http-addr=<%= scope.lookupvar('consul::http_addr') %>:<%= scope.lookupvar('consul::http_port') %>
+env RPC_ADDR=-rpc-addr=<%= scope.lookupvar('consul::rpc_addr') %>:<%= scope.lookupvar('consul::rpc_port') %>
 
 pre-start script
   [ -e $DEFAULTS ] && . $DEFAULTS
@@ -32,8 +32,8 @@ end script
 
 pre-stop script
     # Only leave the cluster if running as an agent
-    if ("${CONSUL}" info ${HTTP_ADDR} 2>/dev/null | grep -q 'server = false' 2>/dev/null) ; then
-        exec "$CONSUL" leave ${HTTP_ADDR}
+    if ("${CONSUL}" info ${RPC_ADDR} 2>/dev/null | grep -q 'server = false' 2>/dev/null) ; then
+        exec "$CONSUL" leave ${RPC_ADDR}
     fi
 end script
 
